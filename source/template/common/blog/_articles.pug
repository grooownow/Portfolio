-
   var articles={
   article1: {
   title:'Самые нужные плагины для Gulp',
   date:'11 марта 2015',
   image: 'article1.jpg',
   content:[
   'autoprefixer — один из самых полезных плагинов, который автоматически расставляет префиксы к CSS свойствам, исходя из статистики caniuse. Важно сказать, что Автопрефиксер это лишь один из множества дополнений в рамках проекта PostCSS от Злых Марсиан. ',
   'gulp-browser-sync — вероятно, самый нужный инструмент, с точки зрения повышения продуктивности веб-разработчиков. BrowserSync создает подключение, после чего производит автообновление страницы во всех браузерах на всех устройствах при изменениями не только клиентских или даже серверных файлов. А плюс ко всему синхронизирует позицию скроллинга и заполненные данные в формах.',
   'gulp-useref — парсит специфичные блоки и конкатенирует описанные в них стили и скрипты.',
   'gulp-email-design — бесценный инструмент при верстки писем, который переводит все CSS стили в инлайновые, автоматически изменяя все пути к файлам, опционально умеет загружать изображения на CDN и даже отсылать письма на почту. ',
   'gulp-csso — отличный CSS минификатор. На сегодняшний день существует целый ряд CSS компрессоров и сравнительная таблица (GitHub) по ним.'
   ]
   },
   article2: {
   title:'Некоторые тонкости Jade',
   date:'4 марта 2016',
   content:[
   'Некоторое время назад мне пришлось окунуться в Meteor. Несмотря на то, что javascript я не люблю, coffeescript еще больше, а node.js меня приводит в бешенство, Meteor очень быстро снискал моё признание и любовь. Я не работал с ним до версии 1.0+, насколько я знаю, там было достаточно много ужасов, однако сейчас, лично для меня, это очень удобный инструмент под небольшие интерактивные проекты. Потому очень хочется поделиться тем, что может облегчить использование данного инструмента другим людям. ',
   'Мой опыт работы с Meteor не такой большой, чтобы взять и начать что-то сложное раскладывать по полочкам. Однако я столкнулся с некоторыми вещами, побился о них головой и нашел какие-то решения. И в этой статье я хочу поделиться своими наблюдениями/советами по работе с jade в Meteor. К сожалению, с ним всё не так здорово, как с чистым jade-ом.',
   'В своих проектах я использую пакет mquandalle:jade, и у него есть ряд неприятных особенностей. Кастомные темплейт хелперы работают не совсем так, как можно того ожидать. Стандартный синтаксис подразумевает, что мы просто берём и вызываем хелпер обычной строкой, если он используется сам по себе. Либо же обрамляем в #{}, если он используется в строке с чем-то. '
   ]
   },
   article3: {
   title:'Node.js и Express как они есть',
   date:'28 августа 2015',
   content:[
   'Благодаря растущей популярности, язык JavaScript в наше время активно развивается, и современная веб-разработка драматически изменилась по сравнению с недавним прошлым. Те вещи, которые мы сегодня можем делать в Вебе при помощи JavaScript, работающего на сервере, а также в браузере, было сложно себе вообразить еще несколько лет назад – в лучшем случае, такие возможности существовали только в песочницах вроде Flash или Java Applets.',
   'Прежде чем подробно поговорить о Node.js, можете почитать о преимуществах полностекового использования JavaScript. При этом тесно переплетаются сам язык и формат данных (JSON), что позволяет оптимально переиспользовать ресурсы разработки. Поскольку это достоинство присуще не столько Node.js, сколько JavaScript в целом, мы не будем подробно останавливаться на этой теме. Но в этом и заключается ключевое преимущество, которое вы приобретаете, внедряя Node в свой стек.'
   ]
   }
   }
